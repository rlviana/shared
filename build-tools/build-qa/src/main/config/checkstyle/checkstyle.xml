<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.3//EN" "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">
<!-- This configuration file was written by the eclipse-cs plugin configuration editor -->
<!-- Checkstyle-Configuration: RLViana Description: none -->
<module name="Checker">
   <!-- Checks that a package-info.java file exists for each package. -->
   <!-- See http://checkstyle.sf.net/config_javadoc.html#JavadocPackage -->
   <!-- <module name="JavadocPackage" /> -->
   <!-- Checks whether files end with a new line. -->
   <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
   <module name="NewlineAtEndOfFile" />
   <!-- Checks that property files contain the same keys. -->
   <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
   <module name="Translation"/>
   <!-- Checks for Size Violations. -->
   <!-- See http://checkstyle.sf.net/config_sizes.html -->
   <!-- <module name="FileLength"> <property name="severity" value="warning"/> </module> -->
   <!-- Checks for whitespace -->
   <!-- See http://checkstyle.sf.net/config_whitespace.html -->
   <module name="FileTabCharacter"/>
   <!-- Miscellaneous other checks. -->
   <!-- See http://checkstyle.sf.net/config_misc.html -->
   <!-- <module name="RegexpSingleline"> <property name="format" value="\s\s+$" /> <property name="minimum" 
      value="0" /> <property name="maximum" value="0" /> <property name="message" value="Line has trailing 
      spaces." /> </module> -->
   <module name="TreeWalker">
      <!-- Checks for Javadoc comments. -->
      <!-- See http://checkstyle.sf.net/config_javadoc.html -->
      <module name="JavadocType">
         <property name="severity" value="info"/>
      </module>
      <module name="JavadocMethod">
         <property name="scope" value="package"/>
         <property name="allowMissingPropertyJavadoc" value="true"/>
         <property name="allowThrowsTagsForSubclasses" value="true"/>
         <property name="severity" value="info"/>
         <property name="allowUndeclaredRTE" value="true"/>
         <property name="allowMissingParamTags" value="true"/>
         <property name="allowMissingReturnTag" value="true"/>
         <property name="allowMissingThrowsTags" value="true"/>
      </module>
      <!-- <module name="JavadocVariable" /> -->
      <!-- <module name="JavadocStyle" /> -->
      <!-- Checks for Naming Conventions. -->
      <!-- See http://checkstyle.sf.net/config_naming.html -->
      <module name="ConstantName">
         <property name="format" value="^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$|log(ger)?|reqCtx|context"/>
         <property name="severity" value="warning"/>
      </module>
      <module name="LocalFinalVariableName"/>
      <module name="LocalVariableName"/>
      <module name="MemberName">
         <property name="severity" value="warning"/>
      </module>
      <module name="MethodName"/>
      <module name="PackageName">
         <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
      </module>
      <module name="ParameterName"/>
      <module name="StaticVariableName"/>
      <module name="TypeName"/>
      <!-- Checks for Headers -->
      <!-- See http://checkstyle.sf.net/config_header.html -->
      <!-- <module name="Header"> -->
      <!-- The follow property value demonstrates the ability -->
      <!-- to have access to ANT properties. In this case it uses -->
      <!-- the ${basedir} property to allow Checkstyle to be run -->
      <!-- from any directory within a project. See property -->
      <!-- expansion, -->
      <!-- http://checkstyle.sf.net/config.html#properties -->
      <!-- <property -->
      <!-- name="headerFile" -->
      <!-- value="${basedir}/java.header"/> -->
      <!-- </module> -->
      <!-- Following interprets the header file as regular expressions. -->
      <!-- <module name="RegexpHeader"/> -->
      <!-- Checks for imports -->
      <!-- See http://checkstyle.sf.net/config_import.html -->
      <module name="AvoidStarImport"/>
      <module name="IllegalImport"/> <!-- defaults to sun.* packages -->
      <module name="RedundantImport">
         <property name="severity" value="warning"/>
      </module>
      <module name="UnusedImports">
         <property name="severity" value="warning"/>
      </module>
      <!-- Checks for Size Violations. -->
      <!-- See http://checkstyle.sf.net/config_sizes.html -->
      <module name="LineLength">
         <property name="ignorePattern" value="^ *\* *[^ ]+$"/>
         <property name="max" value="120"/>
         <property name="severity" value="info"/>
      </module>
      <!-- Checked by PMD: <module name="MethodLength"> <property name="severity" value="warning"/> </module> 
         <module name="ParameterNumber"> <property name="severity" value="warning"/> </module> -->
      <!-- Checks for whitespace -->
      <!-- See http://checkstyle.sf.net/config_whitespace.html -->
      <!-- <module name="EmptyForIteratorPad" /> -->
      <!-- <module name="GenericWhitespace" /> -->
      <module name="MethodParamPad"/>
      <!-- <module name="NoWhitespaceAfter" /> -->
      <!-- <module name="NoWhitespaceBefore" /> -->
      <!-- <module name="OperatorWrap" /> -->
      <!-- <module name="ParenPad" /> -->
      <module name="TypecastParenPad"/>
      <!-- <module name="WhitespaceAfter" /> -->
      <!-- <module name="WhitespaceAround" /> -->
      <!-- Modifier Checks -->
      <!-- See http://checkstyle.sf.net/config_modifiers.html -->
      <module name="ModifierOrder">
         <property name="severity" value="info"/>
      </module>
      <!-- <module name="RedundantModifier" /> -->
      <!-- Checks for blocks. You know, those {}'s -->
      <!-- See http://checkstyle.sf.net/config_blocks.html -->
      <module name="AvoidNestedBlocks"/>
      <module name="EmptyBlock">
         <!-- All except empty catch block: -->
         <property name="tokens"
            value="LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_IF, LITERAL_FOR, LITERAL_TRY, LITERAL_WHILE, INSTANCE_INIT, STATIC_INIT"/>
      </module>
      <module name="LeftCurly">
         <property name="severity" value="info"/>
      </module>
      <module name="NeedBraces">
         <!-- Allow single if line without braces, require on all others -->
         <property name="tokens" value="LITERAL_DO, LITERAL_ELSE, LITERAL_FOR, LITERAL_WHILE"/>
         <property name="severity" value="warning"/>
      </module>
      <module name="RightCurly">
         <property name="severity" value="warning"/>
      </module>
      <!-- Checks for common coding problems -->
      <!-- See http://checkstyle.sf.net/config_coding.html -->
      <!-- <module name="AvoidInlineConditionals" /> -->
      <!-- <module name="DoubleCheckedLocking" /> - Double checked locking is OK in Java 1.5+ -->
      <module name="EmptyStatement"/>
      <module name="EqualsHashCode"/>
      <module name="HiddenField">
         <property name="ignoreConstructorParameter" value="true"/>
         <property name="ignoreSetter" value="true"/>
      </module>
      <module name="InnerAssignment"/>
      <!-- <module name="MagicNumber" /> -->
      <module name="MissingSwitchDefault"/>
      <!-- <module name="RedundantThrows"> <property name="allowUnchecked" value="true"/> </module> -->
      <module name="SimplifyBooleanExpression"/>
      <!-- <module name="SimplifyBooleanReturn" /> -->
      <!-- Checks for class design -->
      <!-- See http://checkstyle.sf.net/config_design.html -->
      <!-- <module name="DesignForExtension" /> -->
      <module name="FinalClass"/>
      <!-- <module name="HideUtilityClassConstructor" /> -->
      <module name="InterfaceIsType">
         <property name="allowMarkerInterfaces" value="true"/>
      </module>
      <module name="VisibilityModifier"/>
      <!-- Miscellaneous other checks. -->
      <!-- See http://checkstyle.sf.net/config_misc.html -->
      <module name="ArrayTypeStyle">
         <property name="severity" value="info"/>
      </module>
      <module name="FinalParameters"/>
      <module name="TodoComment">
         <property name="severity" value="info"/>
      </module>
      <module name="UpperEll">
         <property name="severity" value="warning"/>
      </module>
      <!-- Added by Sampo N. -->
      <module name="IllegalCatch">
         <property name="illegalClassNames"
            value="java.lang.Exception, java.lang.Throwable, java.lang.RuntimeException, com.nokia.sso.common.exceptions.SSOException, java.lang.NullPointerException"/>
      </module>
      <module name="IllegalThrows">
         <property name="illegalClassNames"
            value="java.lang.Throwable, java.lang.Error, java.lang.Exception, java.lang.RuntimeException"/>
      </module>
      <module name="FallThrough"/>
      <module name="MutableException"/>
      <!-- <module name="MissingDeprecated"/> -->
      <module name="MissingOverride"/>
      <module name="UncommentedMain"/>
      <module name="IllegalInstantiation">
         <property name="classes"
            value="java.util.Random,java.security.SecureRandom,java.util.Date,java.text.SimpleDateFormat,java.lang.String,java.lang.Boolean"/>
      </module>
      <!-- Allow filtering based on comments: -->
      <module name="FileContentsHolder"/>
      <module name="RegexpSinglelineJava">
         <property name="format" value="System\.(out)|(err)\.print(ln)?\("/>
         <property name="message" value="System.out or .err is being used."/>
         <property name="ignoreComments" value="true"/>
      </module>
   </module>
         <!-- Allow marking false positives for next 3 lines using e.g. // SUPPRESS CHECKSTYLE 3 NeedBracesCheck -->
      <module name="SuppressWithNearbyCommentFilter">
         <property name="commentFormat" value="SUPPRESS CHECKSTYLE (-?[0-9]+) (\w+)"/>
         <property name="checkFormat" value="$2"/>
         <property name="influenceFormat" value="$1"/>
      </module>
      <!-- Allow marking false positives for next 2 lines using e.g. // SUPPRESS CHECKSTYLE NeedBracesCheck -->
      <module name="SuppressWithNearbyCommentFilter">
         <property name="commentFormat" value="SUPPRESS CHECKSTYLE (\w+)"/>
         <property name="checkFormat" value="$1"/>
         <property name="influenceFormat" value="2"/>
      </module>
      <!-- Allow marking an entire file to be skipped for some type of error (placed before any code) 
         // SUPPRESS CHECKSTYLE FILE NeedBracesCheck -->
      <module name="SuppressWithNearbyCommentFilter">
         <property name="commentFormat" value="SUPPRESS CHECKSTYLE FILE (\w+)"/>
         <property name="checkFormat" value="$1"/>
         <property name="influenceFormat" value="10000"/>
      </module>
      <!-- Allow marking an entire file to be skipped for all types of error (placed before any code) 
         // SUPPRESS CHECKSTYLE FILE * -->
      <module name="SuppressWithNearbyCommentFilter">
         <property name="commentFormat" value="SUPPRESS CHECKSTYLE ALL"/>
         <property name="checkFormat" value=""/>
         <property name="influenceFormat" value="10000"/>
      </module>
      <!-- Allow marking non-constant static final fields using // NON-CONSTANT -->
      <module name="SuppressWithNearbyCommentFilter">
         <property name="commentFormat" value="CHECKSTYLE NON-CONSTANT"/>
         <property name="checkFormat" value="ConstantName"/>
         <property name="influenceFormat" value="2"/>
      </module>
      <!-- Allow marking non-final paramaters using // NON-FINAL -->
      <module name="SuppressWithNearbyCommentFilter">
         <property name="commentFormat" value="CHECKSTYLE NON-FINAL"/>
         <property name="checkFormat" value="FinalParameters"/>
         <property name="influenceFormat" value="2"/>
      </module>
      <!-- Suppression filter -->
      <module name="SuppressionFilter">
         <property name="file" value="./suppression-files.xml"/>
      </module>
</module>